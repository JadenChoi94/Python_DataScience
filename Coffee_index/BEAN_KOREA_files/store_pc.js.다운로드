	var delayID = "";	
	var delayTime = 500;	// 딜레이될 시간 
	var markers = [];
	var infowindow = [];
	var overlay = [];
	var map = ""
	var defaultLAT = "37.5146883"; //y
	var defaultLNG = "127.0591567"; //x

	var mode = "center";
	//리스트
	var storeListHTML = '<li data-lng="<#StoreLNG#>" data-lat="<#StoreLAT#>" data-no="<#StoreNo#>"> ' +
							'		<div class="num"><#StoreSort#></div> ' +
							'		<div class="store_txt"> ' +
							'			<p class="name"> ' +
							'				<span><#StoreName#><strong class="distance"><#Distant#></strong></span> ' +
							'				<a href="javascript:storePop2(\'<#StoreNo#>\');void(0);" class="btn_style6">자세히보기</a> ' +
							'			</p> ' +
							'			<p class="tag"> ' +
							'				<#StoreDecaffeine#><#StoreSoymilk#><#StoreParking#><#StoreWifi#><#Storesmoking#><#StoreMachine#><#StoreCapsule#><#StoreCake#><#StoreDrive#> ' +
							'			</p> ' +
							'			<p class="address"> ' +
							'				<span><#StoreAddress#></span><!--span class="lot"><#StoreAddress2#></span--> ' +
							'			</p> ' +
							'			<p class="tel"><a href="tel:<#StoreTell#>"><#StoreTell#></a></p> ' +
							'		</div> ' +
							'	</li> ';
	
//							'				<span>디카페인<#StoreDecaffeine#></span> ' +
//							'				<span>두유<#StoreSoymilk#></span> ' +
//							'				<span>와이파이<#StoreWifi#></span> ' +
//							'				<span>주차가능<#StoreParking#></span> ' +
//							'				<span>흡연가능<#Storesmoking#></span> ' +
//							'				<span>머신판매<#StoreMachine#></span> ' +
//							'				<span>캡슐판매<#StoreCapsule#></span> ' +
//							'				<span>케익수령<#StoreCake#></span> ' +
	//클릭 오버레이
	var overlayContent = '<div class="wrap">' + 
				'    <div class="info">' + 
				'        <div class="title">' + 
				'            <#StoreName#>' + 
				'            <div class="close" onclick="resetOverlay()" title="닫기"></div>' + 
				'        </div>' + 
				'        <div class="body">' + 
				'           <!--div class="img">' +
				'                <#StoreSort#>' +
				'           </div-->' + 
				'            <div class="desc">' + 
				'                <div class="ellipsis"><#StoreAddress#></div>' + 
				'                <div class="jibun ellipsis"><#StoreTell#></div>' + 
				'                <div><a href="javascript:storePop2(\'<#StoreNo#>\');void(0);" class="link" >자세히보기</a></div>' + 
				'            </div>' + 
				'        </div>' + 
				'    </div>' +    
				'</div>';

	$(function(){
	
		//현재위치 조회부터 시작
		//get_geo();
		loadDaumMap( defaultLAT, defaultLNG );

		//지역리스트
		storeLocal();

		jQuery("#location").click(function(){
			mode = "center"; get_geo();
		})
		jQuery("#chkall").change(function(){
			jQuery("input[id^=chk]").prop("checked", jQuery("#chkall").prop("checked"));
		})
		jQuery("input[id^=chk]").change(function(){
			//setDaumMapMarker(map, '', '', '' );
			if ( jQuery("input[id^=chk]").not("input[id=chkall]").length - jQuery("input[id^=chk]:checked").not("input[id=chkall]").length == 0 ) 	{
				jQuery("input[id=chkall]").prop("checked", true);
			} else {
				jQuery("input[id=chkall]").prop("checked", false);
			}
		})
		jQuery("#btnChkSearch").click(function(){
			setDaumMapMarker(map, '', '', '' );
			
			jQuery('.btn_condition').removeClass('on');
			jQuery('.condition_box').hide();	
		})

		jQuery("#keyword").focus(function(){
			jQuery(this).val() == jQuery(this).attr("data-val") ? jQuery(this).val('') : "" ;
		}).blur(function(){
			jQuery(this).val() == "" ? jQuery(this).val( jQuery(this).attr("data-val") ) : "" ;
		}).keyup(function(e){
			e.keyCode == 13 ? searchStore() : "" ; 
		})
		
		//STORE LOCATOR 클릭
		jQuery("#store_local").click(function(){
			mode = "center";
			resetSearch();
			get_geo();
		})
		//NEW STORE 클릭
		jQuery("#store_new").click(function(){
			mode = "new";
			resetSearch();
			newStore();
			
		})
	});
	
	//현재 위치
	function get_geo(){
//		jQuery("#storeMap div").remove();
		try	{
			navigator.geolocation.getCurrentPosition(successCallback, errorCallback)
		} catch(e) {
			if ( defaultLAT != "" && defaultLNG != "") {
				loadDaumMap( defaultLAT, defaultLNG );
			}
		}
	}
	//현재 위치 - 성공
	function successCallback(position) {
	
		//alert(position.coords.latitude + ' ' + position.coords.longitude);
		defaultLAT = position.coords.latitude;
		defaultLNG = position.coords.longitude;
		
		
		if ( defaultLNG != "" && defaultLAT != "" ) {
			loadDaumMap( defaultLAT, defaultLNG );
		}
		//defaultLNG = "" ; defaultLAT = "";
	}
	//현재 위치 - 실패
	function errorCallback(){
		//alert("fail");
		if ( defaultLAT != "" && defaultLNG != "" ) {
			loadDaumMap( defaultLAT, defaultLNG  );
		}
		//defaultLAT = ""; defaultLNG = "" ; 
	}
	//마커 및 인포윈도우 삭제 함수
	function resetDaumMap(){
		jQuery("#storeListUL").html('');
		for (var i = 0; i < markers.length; i++) {
			markers[i].setMap(null);
			//infowindow[i].close();
		}   
		for (var i = 0; i < overlay.length; i++) {
			overlay[i].setMap(null);
		}   
	}
	//인포윈도우 모두 삭제
	function resetInfowindow(){
		for (var i = 0; i < infowindow.length; i++) {
			infowindow[i].close();
		}   
	} 
	//오버레이 모두 삭제
	function resetOverlay(){
		for (var i = 0; i < overlay.length; i++) {
			overlay[i].setMap(null);
		}   
	} 
	
	//검색, 지역 초기화
	function resetSearch(){
		jQuery("#keyword").val( jQuery("#keyword").attr("data-val") );
		jQuery("#localTitle").text( jQuery("#localTitle").attr("data-default") );
		jQuery("#localTitle2").text( jQuery("#localTitle2").attr("data-default") ) ; 		
	}

	// 맵 로딩 - 중심 좌표 기준
	function loadDaumMap( storeLAT, storeLNG ){
		jQuery("#storeMap div").remove();
		var storeLAT = storeLAT;
		var storeLNG = storeLNG;

		var position = new daum.maps.LatLng(storeLAT, storeLNG);
		var container = document.getElementById('storeMap');

		var options = {
			center: position,
			level: 4,
			mapTypeId: daum.maps.MapTypeId.ROADMAP
		};

		map = new daum.maps.Map(container, options);

		var zoomControl = new daum.maps.ZoomControl();
		map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);
		
		//드래그 시작시 - 지도 초기화
		daum.maps.event.addListener(map, 'dragstart', function() {
			if (mode == "center") {
				resetDaumMap();
			}	
		});
		//드래그 끝 - 마커등 생성
		daum.maps.event.addListener(map, 'dragend', function() {
			if (mode == "center")	{
				clearTimeout(delayID);
				delayID = setTimeout(function(){
					var center = map.getCenter();
					setDaumMapMarker(map, center.getLat(), center.getLng(), 'center' );
				}, delayTime);
			}
		});
		//중심 좌표 변경시 실행
		daum.maps.event.addListener(map, 'center_changed', function() {
			//
		});

		if ( category == 2 ) {
			mode = "new";
			newStore();
			category = "";
		} else {
			if (mode == "center")	{
				setDaumMapMarker(map,  "", "", "" );
			}
		}

	}
	
	//데이터 로딩
	function setDaumMapMarker(map, lat, lng, selectMode ){
		jQuery(".store_locator").addClass("on");jQuery(".store_locator").next(".cont").show();
		jQuery(".store_new").removeClass("on");jQuery(".store_new").next(".cont").hide();

		selectMode != "" ? mode = selectMode : mode = mode ;
		var local = "";
		var local2 = "";
		var keyword = "";
		var sNo_temp = "";

		if (sNo != "" ) {
			mode = 'search';
			sNo_temp = sNo;
			sNo = "";

		} else {
			switch(mode) {
				case 'search' : ( 
									keyword = jQuery("#keyword").val() != jQuery("#keyword").attr("data-val") && jQuery("#keyword").val() != "" ? jQuery("#keyword").val() : "" , 
									jQuery("#storeLocal2").html(''),
									lat = "", lng = ""
								);	break;
				case 'local' : ( 
									lat = "", lng = "", 
									jQuery("#keyword").val('') ,
									local = ( jQuery("#localTitle").text() != jQuery("#localTitle").attr("data-default") && jQuery("#localTitle").text() != "" ) ? jQuery("#localTitle").text() : "",
									local2 = ( jQuery("#localTitle2").text() != jQuery("#localTitle2").attr("data-default") && jQuery("#localTitle").text() != "" ) ? jQuery("#localTitle2").text() : ""
								); break;
				case 'center' : ( 
									jQuery("#keyword").val(''),
									( lat == "" || lng == ""  ) ? 
										( 
											center = map.getCenter(),
											lat = center.getLat(), lng = center.getLng() 
										) : "" 
									); break;
			}
		}

		//mode == "search" ? ( keyword = jQuery("#keyword").val(), /*jQuery("#keyword").val(''),*/ lat = "", lng = ""  ) : ( keyword = "", jQuery("#keyword").val(''), ( lat == "" || lng == ""  ) ? ( center = map.getCenter(), lat = center.getLat(), lng = center.getLng() ) : "" 	)

		// mode2 - 지역 검색 일때 해당 데이터 외 모든 값을 초기화 해준다
		//mode2 != "" ? ( mode = "search", keyword = "", lat = "", lng = "", jQuery("#keyword").val('') ) : mode = mode ; 
		
		var chk1 = jQuery("#chk1").prop("checked") ? 1 : 0 ; 
		var chk2 = jQuery("#chk2").prop("checked") ? 1 : 0 ; 
		var chk3 = jQuery("#chk3").prop("checked") ? 1 : 0 ; 
		var chk4 = jQuery("#chk4").prop("checked") ? 1 : 0 ; 
		var chk5 = jQuery("#chk5").prop("checked") ? 1 : 0 ; 
		var chk6 = jQuery("#chk6").prop("checked") ? 1 : 0 ; 
		var chk7 = jQuery("#chk7").prop("checked") ? 1 : 0 ; 
		var chk8 = jQuery("#chk8").prop("checked") ? 1 : 0 ; 
		var chk9 = jQuery("#chk9").prop("checked") ? 1 : 0 ; 

		jQuery.ajax({
			type: "GET",
			datatype: "json",
			data : { "lat" : lat, "lng" : lng ,
					"chk1" : chk1 , "chk2" : chk2 , "chk3" : chk3 , "chk4" : chk4 , "chk5" : chk5 , "chk6" : chk6 , "chk7" : chk7 , "chk8" : chk8 , "chk9" : chk9 , 
					"keyword" : keyword, "StoreLocal" : local, "StoreLocal2" : local2, "storeNo" : sNo_temp },
			url: "store_data2.asp",
			success: function (data) {

				//clusterer.clear();

				//마커, 인포 윈도우 , 리스트 초기화 
				resetDaumMap();
				positions = eval(data);

				//검색 일때 첫번째 순위가 센터로 잡힘
				if ( mode != "center" && positions.length > 0 ) {
					map.setCenter( new daum.maps.LatLng(positions[0].StoreLAT, positions[0].StoreLNG) );
				}

				//마커 데이터로 그리기
				positions.length > 0 ? drawDaumMapMarker(positions) : jQuery("#storeListUL").html("<div style='width:100%;text-align:center;margin:50px 0px;'>검색된 매장이 없습니다.</div>");
			}
		})
		//키워드 가 빈칸이면 기본 문구로 채워준다
		jQuery("#keyword").val() == "" ? jQuery("#keyword").val( jQuery("#keyword").attr("data-val") ) : "" ;
	}

	//마커를 데이터로 그리기
	function drawDaumMapMarker(positions){
		var imageSrc = ""; 

		for( var i = 0 ; i <  positions.length  ; i++ ){
			
			//지도 마커 표시 부분
			var imageSize = new daum.maps.Size(40, 47); 
			var imageSrc = "/images/store/store_icon_" + positions[i].sort + ".png";
			// 마커 이미지를 생성합니다    
			var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize); 
			
			// 마커를 생성합니다
			markers[i] = new daum.maps.Marker({
				map: map, // 마커를 표시할 지도
				position: new daum.maps.LatLng(positions[i].StoreLAT, positions[i].StoreLNG), // 마커를 표시할 위치
				title : positions[i].StoreName, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
				image : markerImage // 마커 이미지 
			});

			markers[i].index = i;
			markers[i].no = positions[i].StoreNo;
			markers[i].setMap(map);

			//리스트 표시 부분
			var storeListHTML_temp = "";
			storeListHTML_temp = storeListHTML;
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreName#>/g, positions[i].StoreName );
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreAddress#>/g, positions[i].StoreAddress );
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreTell#>/g, positions[i].StoreTel );
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreSort#>/g, positions[i].sort );
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreLAT#>/g, positions[i].StoreLAT );
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreLNG#>/g, positions[i].StoreLNG );
			storeListHTML_temp = storeListHTML_temp.replace( /<#StoreNo#>/g, positions[i].StoreNo );
			//storeListHTML_temp =  positions[i].Distant != "" ? storeListHTML_temp.replace( /<#Distant#>/g, "(" + positions[i].Distant + " km)") : storeListHTML_temp.replace( /<#Distant#>/g, "");
			storeListHTML_temp = positions[i].StoreDecaffeine == 1 ? storeListHTML_temp.replace( /<#StoreDecaffeine#>/g, "<span class='decaf' title='디카페인'>디카페인</span>") : storeListHTML_temp.replace( /<#StoreDecaffeine#>/g, "");
			storeListHTML_temp = positions[i].StoreSoymilk == 1 ? storeListHTML_temp.replace( /<#StoreSoymilk#>/g, "<span class='soy' title='두유'>두유</span>") : storeListHTML_temp.replace( /<#StoreSoymilk#>/g, "");
			storeListHTML_temp = positions[i].StoreWifi == 1 ? storeListHTML_temp.replace( /<#StoreWifi#>/g, "<span class='wifi' title='와이파이'>와이파이</span>") : storeListHTML_temp.replace( /<#StoreWifi#>/g, "");
			storeListHTML_temp = positions[i].StoreParking == 1 ? storeListHTML_temp.replace( /<#StoreParking#>/g, "<span class='parking' title='주차가능'>주차가능</span>") : storeListHTML_temp.replace( /<#StoreParking#>/g, "");
			storeListHTML_temp = positions[i].Storesmoking == 1 ? storeListHTML_temp.replace( /<#Storesmoking#>/g, "<span class='smoking' title='흡연가능'>흡연가능</span>") : storeListHTML_temp.replace( /<#Storesmoking#>/g, "");
			storeListHTML_temp = positions[i].StoreMachine == 1 ? storeListHTML_temp.replace( /<#StoreMachine#>/g, "<span class='machine' title='머신판매'>머신판매</span>") : storeListHTML_temp.replace( /<#StoreMachine#>/g, "");
			storeListHTML_temp = positions[i].StoreCapsule == 1 ? storeListHTML_temp.replace( /<#StoreCapsule#>/g, "<span class='capsule' title='캡슐판매'>캡슐판매</span>") : storeListHTML_temp.replace( /<#StoreCapsule#>/g, "");
			storeListHTML_temp = positions[i].StoreCake == 1 ? storeListHTML_temp.replace( /<#StoreCake#>/g, "<!--span class='cake' title='케익수령'>케익수령</span-->") : storeListHTML_temp.replace( /<#StoreCake#>/g, "");

			storeListHTML_temp = positions[i].StoreDrive == 1 ? storeListHTML_temp.replace( /<#StoreDrive#>/g, "<span class='drive' title='드라이브 스루'>드라이브 스루</span>") : storeListHTML_temp.replace( /<#StoreDrive#>/g, "");

			storeListHTML_temp = mode == "center" ? storeListHTML_temp.replace( /<#Distant#>/g, PrintComma( Math.round( positions[i].Distant * 1000 ) ) + "m" ) : storeListHTML_temp.replace( /<#Distant#>/g, "" );
			

			jQuery("#storeListUL").append(storeListHTML_temp);

			//오버레이 설정 부분
			var overlayContent_temp = "";
			overlayContent_temp = overlayContent;
			overlayContent_temp = overlayContent_temp.replace( /<#StoreName#>/g, positions[i].StoreName );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreAddress#>/g, positions[i].StoreAddress );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreSort#>/g, "<img src='" + "/images/store/store_icon_" + positions[i].sort + ".png' width='80' >" );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreLAT#>/g, positions[i].StoreLAT );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreLNG#>/g, positions[i].StoreLNG );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreNo#>/g, positions[i].StoreNo );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreTell#>/g, positions[i].StoreTel );
			
			overlay[i] = new daum.maps.CustomOverlay({
				content: overlayContent_temp,
				map: map  
			});

			daum.maps.event.addListener(markers[i], "click", function() {
				// 일단 오버레이를 모두 닫고
				resetOverlay();
				
				
				//센터로 이동
				map.setCenter(markers[this.index].getPosition());
				
				
				// 해당 인포윈도를 열어준다.
				//infowindow[this.index].open(map, markers[this.index]);

				//해당 오버레이를 열어준다
				overlay[this.index].setMap(map);
				overlay[this.index].setPosition(markers[this.index].getPosition() );
			});
		} //	for( var i = 0 ; i <  positions.length  ; i++ ){

		//리스트 클릭 이벤트 생성
		jQuery("#newStoreListUL li").off("click");
		jQuery("#storeListUL li").off("click");
		jQuery("#storeListUL li").on("click",function(){
			// 일단 오버레이를 모두 닫고
			resetOverlay();
			//센터로 이동
			map.setCenter(new daum.maps.LatLng(jQuery(this).attr("data-lat"), jQuery(this).attr("data-lng")));
			// 해당 인포윈도를 열어준다.
			//infowindow[jQuery(this).index()].open(map, markers[jQuery(this).index()]);
			//해당 오버레이를 열어준다
			overlay[jQuery(this).index()].setMap(map);
			overlay[jQuery(this).index()].setPosition(new daum.maps.LatLng(jQuery(this).attr("data-lat"), jQuery(this).attr("data-lng")) );
		})

		//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시
		//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시
//		var center = map.getCenter();
//		lat = center.getLat();
//		lng = center.getLng() ;
//		
//		markers[i] = new daum.maps.Marker({ position: new daum.maps.LatLng( lat, lng ) }); 
//		markers[i].setMap(map);
//
//		markers[i].index = i;
//
//		markers[i].setMap(map);
//
//		 //infowindow[i] = 
//		//	new daum.maps.InfoWindow({
//		//	content: '<p style="margin:7px 22px 7px 12px;font:12px/1.5 sans-serif">CENTER</p>',
//		//removable : true});
//
//		overlay[i] = new daum.maps.CustomOverlay({
//				content: overlayContent,
//				map: map  
//			});
//
//		daum.maps.event.addListener(markers[i], "click", function() {
//			// 일단 인포윈도를 모두 닫고
//			 for ( var j = 0; j < markers.length ; j++) {
//				//infowindow[j].close();
//				overlay[j].setMap(null);
//			 }
//			//센터로 이동
//			map.setCenter(markers[this.index].getPosition());
//			// 해당 인포윈도를 열어준다.
//			//infowindow[this.index].open(map, markers[this.index]);
//
//			//해당 오버레이를 열어준다
//			overlay[this.index].setMap(map);
//			overlay[this.index].setPosition(markers[this.index].getPosition() );
//		});
		//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시
		//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시//테스트용 센터 표시

	}
	//키워드로 데이터 로딩
	function searchStore(){
		jQuery("#keyword").val() == "" || jQuery("#keyword").val() == jQuery("#keyword").attr("data-val") ? 
			(
				alert("검색어를 입력해 주세요") 
			)
			: 
			( 
				mode = "search", 
				setDaumMapMarker(map, '', '', 'search'), 
				jQuery("#localTitle").text( jQuery("#localTitle").attr("data-default") ),
				jQuery("#localTitle2").text( jQuery("#localTitle2").attr("data-default") )  				
			);
	}

	//시/도 리스트
	function storeLocal() { 
		jQuery.ajax({
			type: "GET",
			datatype: "json",
			//data : { "storeNo" : no },
			url: "store_local_data.asp",
			success: function (data) {
				local = eval(data);
				
				var localList = "";
				for( var i = 0 ; i <  local.length  ; i++ ){
					localList += '<li><a href="javascript:storeLocal2(\'' + local[i].StoreLocal + '\');void(0);">' + local[i].StoreLocal + '</a></li>';
				}
				jQuery("#storeLocal").html(localList);

			}
		})
	}

	//구군 리스트
	function storeLocal2(local) { 
		//구군 리스트 초기화 후 맵을 로딩 해준다
		jQuery("#localTitle2").text( jQuery("#localTitle2").attr("data-default") );
		setDaumMapMarker(map, '', '', 'local' );

		jQuery.ajax({
			type: "GET",
			datatype: "json",
			data : { "storeLocal" : local  },
			url: "store_local_data.asp",
			success: function (data) {
				
				local = eval(data);

				var localList = "";
				for( var i = 0 ; i <  local.length  ; i++ ){
					localList += '<li><a href="javascript:setDaumMapMarker(map, \'\', \'\', \'local\' );void(0);">' + local[i].StoreLocal + '</a></li>';
				}
				jQuery("#storeLocal2").html(localList);

			}
		})
	}

	function newStore(){
		resetDaumMap();
		var k = 0;

		jQuery("#newStoreListUL li").each(function(){
			var obj = jQuery(this);
			
			var data_name = obj.attr("data-name");
			var data_addr = obj.attr("data-addr");
			var data_sort = obj.attr("data-sort");
			var data_lat = obj.attr("data-lat");
			var data_lng = obj.attr("data-lng");
			var data_no = obj.attr("data-no");
			var data_tel = obj.attr("data-tel");

			if (  k == 0 ) {
				map.setCenter( new daum.maps.LatLng(data_lat, data_lng) );
			}

			//지도 마커 표시 부분
			var imageSize = new daum.maps.Size(40, 47); 
			var imageSrc = "/images/store/store_icon_" + data_sort + ".png";
			// 마커 이미지를 생성합니다    
			var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize); 
			
			// 마커를 생성합니다
			markers[k] = new daum.maps.Marker({
				map: map, // 마커를 표시할 지도
				position: new daum.maps.LatLng(data_lat, data_lng), // 마커를 표시할 위치
				title : data_name, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
				image : markerImage // 마커 이미지 
			});

			markers[k].index = k;
			markers[k].no = data_no
			markers[k].setMap(map);

			//오버레이 설정 부분
			var overlayContent_temp = "";
			overlayContent_temp = overlayContent;
			overlayContent_temp = overlayContent_temp.replace( /<#StoreName#>/g, data_name );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreAddress#>/g, data_addr );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreSort#>/g, "<img src='" + "/images/store/store_icon_" + k + ".png' width='80' >" );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreLAT#>/g, data_lat );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreLNG#>/g, data_lng );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreNo#>/g, data_no );
			overlayContent_temp = overlayContent_temp.replace( /<#StoreTell#>/g, data_tel );
			
			overlay[k] = new daum.maps.CustomOverlay({
				content: overlayContent_temp,
				map: map  
			});

			daum.maps.event.addListener(markers[k], "click", function() {
				// 일단 오버레이를 모두 닫고
				resetOverlay();
				//센터로 이동
				map.setCenter(markers[this.index].getPosition());
				// 해당 인포윈도를 열어준다.
				//infowindow[this.index].open(map, markers[this.index]);

				//해당 오버레이를 열어준다
				overlay[this.index].setMap(map);
				overlay[this.index].setPosition(markers[this.index].getPosition() );
			});
			k++;

		})
				//리스트 클릭 이벤트 생성
		jQuery("#storeListUL li").off("click");
		jQuery("#newStoreListUL li").off("click");
		jQuery("#newStoreListUL li").on("click",function(){
			// 일단 오버레이를 모두 닫고
			resetOverlay();
			//센터로 이동
			map.setCenter(new daum.maps.LatLng(jQuery(this).attr("data-lat"), jQuery(this).attr("data-lng")));
			// 해당 인포윈도를 열어준다.
			//infowindow[jQuery(this).index()].open(map, markers[jQuery(this).index()]);
			//해당 오버레이를 열어준다
			overlay[jQuery(this).index()].setMap(map);
			overlay[jQuery(this).index()].setPosition(new daum.maps.LatLng(jQuery(this).attr("data-lat"), jQuery(this).attr("data-lng")) );
		})

	}

	